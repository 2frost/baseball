// readline 불러오기
const readline = require("readline");

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
});


console.log("0-9사이에서 중복되지않는 3개의 숫자를 한번에 선택하세요")
startGame();


//** 0-9 랜덤뽑기 **/
function Randomnumbers() {
    const numbers = [];
    while (numbers.length < 3) {
        let num = Math.floor(Math.random() * 10); // 0~9 사이의 랜덤
        if (!numbers.includes(num)) { // 숫자안에 들어가지않으면
            numbers.push(num); // 배열에 추가
        }
    }
    return numbers;
}

//**게임시작 **/
function startGame() {
    // 랜덤 숫자 생성하기
    let answer = Randomnumbers();
    console.log("answer: ", answer)

    //시도한 횟수 카운터
    let count = 0;

    // 사용자에게 질문하기
    rl.on("line", (input) => {
        // 입력값이 숫자가 아니거나 길이가 다르면 오류 메시지 출력하고 다시 질문하기

        if (isNaN(input) || input.length !== answer.length) {
            console.log("숫자로만 입력가능합니다!");

        } else if (answer.length === 3) {
            // 시도한 회수 증가시키기
            count++;
            // 입력값을 배열로 변환하기
            input = input.split("").map(Number);

            showBallsAndStrikes(input, answer);

            let result = showBallsAndStrikes(input, answer);
            console.log(result)

            if (result.strikes === 3) {
                console.log("아웃!!!!!!!");
                console.log(`당신의 시도는 ${count}번 입니다.`);
                endGame();
            } else if (result.strikes !== 3) {
                return showBallsAndStrikes
            }

            rl.close();
        }
    });
}

rl.on('close', () => {
    // 입력이 끝난 후 실행할 코드
    process.exit();
})

// ** 볼 스트라이크 갯수 확인 ** //
function showBallsAndStrikes(a, b) {
    let input = a
    let answer = b

    // 볼과 스트라이크의 변수
    let balls = 0;
    let strikes = 0;

    // 입력값 정답 비교
    for (let i = 0; i < input.length; i++) {
        // 입력값과 정답이 같으면 스트라이크
        if (input[i] === answer[i]) {
            strikes++;
        }
        // 입력값이 정답에 포함되어 있으면 볼 증가
        else if (answer.includes(input[i])) {
            balls++;
        }
    }
    return { balls, strikes }; // 볼과 스트라이크의 개수를 반환
}

//** 게임종료 **//
function endGame() {
    rl.close();
}
